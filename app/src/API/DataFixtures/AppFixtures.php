<?php

namespace App\API\DataFixtures;

use App\API\Entity\Comment;
use App\API\Entity\Follow;
use App\API\Entity\Likes;
use App\API\Entity\Tweet;
use App\API\Entity\Users;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Persistence\ObjectManager;
use Faker\Factory;

class AppFixtures extends Fixture
{
    public function load(ObjectManager $manager): void
    {
        $faker = Factory::create('fr_FR');

        // Exemples de contenus fran√ßais
        $tweetContents = [
            "Quelqu‚Äôun comprend vraiment le routing Symfony ? üòÖ",
            "Premier test avec Faker, c‚Äôest trop bien !",
            "Le caf√© est essentiel pour coder proprement ‚òï",
            "J‚Äôai cass√© ma base de donn√©es‚Ä¶ encore une fois.",
            "Symfony ou Laravel ? Vos avis ?",
            "Il pleut mais au moins mon code fonctionne.",
            "Prochain objectif : s√©curiser mon API avec JWT.",
            "J‚Äôadore ce framework, vraiment bien pens√© !",
            "L‚Äôint√©gration de Doctrine est magique üîÆ",
            "J‚Äôai mis 3h √† trouver une faute de frappe‚Ä¶",
            "CSS me fait plus peur que SQL honn√™tement.",
            "La m√©thode magique __toString m‚Äôa encore eu !",
            "Qui veut tester mon projet Symfony ? üß™",
            "Les fixtures c‚Äôest g√©nial pour bosser en local.",
            "Encore un commit ‚Äòfix bug‚Äô‚Ä¶ ü§¶",
        ];

        $commentContents = [
            "Tr√®s bon point !",
            "Je suis d'accord avec toi.",
            "Tu peux expliquer un peu plus ?",
            "Pas mal, mais √ßa pourrait √™tre optimis√©.",
            "Merci pour l'astuce !",
            "Haha, tellement vrai !",
            "C'est exactement ce que je pense.",
            "Je ne suis pas convaincu.",
            "Tu aurais une source ?",
            "GG pour ton projet üëè",
            "Int√©ressant, je vais tester √ßa.",
            "Symfony c‚Äôest top !",
            "Laravel reste plus intuitif je trouve.",
            "Doctrine parfois me perd compl√®tement‚Ä¶",
            "J‚Äôai eu le m√™me probl√®me hier !",
        ];

        // Cr√©er des utilisateurs
        $users = [];
        for ($i = 0; $i < 10; $i++) {
            $user = new Users();
            $user->setPseudo($faker->userName)
                ->setEmail($faker->email)
                ->setMdp(password_hash('password', PASSWORD_BCRYPT))
                ->setAvatar($faker->imageUrl(100, 100, 'people'))
                ->setDateCreation($faker->dateTimeThisYear);
            $manager->persist($user);
            $users[] = $user;
        }

        // Cr√©er des tweets
        $tweets = [];
        for ($i = 0; $i < 40; $i++) {
            $tweet = new Tweet();
            $tweet->setContenu($faker->randomElement($tweetContents))
                ->setDate($faker->dateTimeThisMonth)
                ->setUser($faker->randomElement($users));
            $manager->persist($tweet);
            $tweets[] = $tweet;
        }

        // Cr√©er des commentaires
        for ($i = 0; $i < 80; $i++) {
            $comment = new Comment();
            $comment->setContenu($faker->randomElement($commentContents))
                ->setDate($faker->dateTimeThisMonth)
                ->setTweet($faker->randomElement($tweets))
                ->setUser($faker->randomElement($users));
            $manager->persist($comment);
        }

        // Cr√©er des likes
        for ($i = 0; $i < 100; $i++) {
            $like = new Likes();
            $like->setDate($faker->dateTimeThisMonth)
                ->setTweet($faker->randomElement($tweets))
                ->setUser($faker->randomElement($users));
            $manager->persist($like);
        }

        // Cr√©er des follows (√©vite de suivre soi-m√™me)
        for ($i = 0; $i < 30; $i++) {
            $follower = $faker->randomElement($users);
            $followed = $faker->randomElement($users);

            if ($follower !== $followed) {
                $follow = new Follow();
                $follow->setDate($faker->dateTimeThisYear)
                    ->setUser($follower)
                    ->setUserSuivi($followed);
                $manager->persist($follow);
            }
        }

        $manager->flush();
    }
}
